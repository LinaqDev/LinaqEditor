<Application x:Class="LinaqEditor.App"
             
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LinaqEditor" 
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sw="clr-namespace:LinaqEditor.WindowStyle"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Grey.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="WindowColor" Color="Red" />
            <SolidColorBrush x:Key="WindowBackColor" Color="#00FF00"/>
            <SolidColorBrush x:Key="WindowForeColor" Color="WhiteSmoke"/>
            <SolidColorBrush x:Key="WindowForeHighlightColor" Color="WhiteSmoke"/>
            <SolidColorBrush x:Key="WindowButtonColor" Color="Blue"/>
            <SolidColorBrush x:Key="WindowButtonOverColor" Color="White" Opacity=".2"/>
            <SolidColorBrush x:Key="WindowButtonPressedColor" Color="White" Opacity=".2"/>

            <sw:WindowMinimizeCommand x:Key="MinimizeCommand"/>
            <sw:WindowMaximizeCommand x:Key="MaximizeCommand"/>
            <sw:WindowCloseCommand x:Key="CloseCommand"/>

            <Style TargetType="{x:Type Image}" x:Key="WindowIcon">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/> 
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="WindowButton">
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="{StaticResource WindowColor}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource WindowButtonOverColor}"/>
                                    <Setter Property="Foreground" Value="{StaticResource WindowForeHighlightColor}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource WindowButtonPressedColor}"/>
                                    <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="WindowTemplateNoResize" TargetType="{x:Type Window}">
                <Border BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}" BorderThickness="1">
                    <Grid Background="{DynamicResource PrimaryHueMidBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Margin="5,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="75"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0"                                           
                                    sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}"                                               
                                    sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" Padding="0">
                                    <Image DockPanel.Dock="Left" Style="{StaticResource WindowIcon}" Source="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"                                         
                                    Width="35"     Margin="1"                                        
                                    sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"                                           
                                    sw:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}"/>
                                </Label>
                                <Label Grid.Column="1" FontFamily="Arial" Foreground="{StaticResource WindowForeColor}" Content="{Binding Path=Version, Source={x:Static Application.Current}}"/>
                                <Label Grid.Column="1" DockPanel.Dock="Left" Content="{TemplateBinding Property=Title}" Padding="3,0,0,0"                                                                                  
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Foreground="{StaticResource WindowForeColor}"                                           
                                    FontSize="20"
                                    sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                    sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                                    sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                    sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                    sw:ShowSystemMenuBehavior.RightButtonShow="true"/>
                                <StackPanel Grid.Column="2" Orientation="Horizontal">

                                    <Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" >
                                        <Button.Content>
                                            <material:PackIcon Kind="WindowMinimize"  />
                                        </Button.Content>
                                    </Button>
                                    <Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}">
                                        <Button.Content>
                                            <material:PackIcon Kind="WindowMaximize"  />
                                        </Button.Content>
                                    </Button>
                                    <Button DockPanel.Dock="Right"  Style="{StaticResource WindowButton}" Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" >
                                        <Button.Content>
                                            <material:PackIcon Kind="WindowClose"  />
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter x:Name="WindowContent"/>
                                    </AdornerDecorator>
                                    <ResizeGrip  x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <!--<Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>-->
                    </Grid>
                </Border>
            </ControlTemplate>
            <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
                <Border BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}" BorderThickness="1">
                    <Grid Background="{DynamicResource PrimaryHueMidBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Margin="5,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="75"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0"                                           
                                    sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}"                                               
                                    sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" Padding="0">
                                    <Image DockPanel.Dock="Left" Style="{StaticResource WindowIcon}" Source="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"                                         
                                    Width="35"     Margin="1"                                        
                                    sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"                                           
                                    sw:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}"/>
                                </Label>
                                <Label Grid.Column="1" FontFamily="Arial" Foreground="{StaticResource WindowForeColor}" Content="{Binding Path=Version, Source={x:Static Application.Current}}"/>
                                <Label Grid.Column="1" DockPanel.Dock="Left" Content="{TemplateBinding Property=Title}" Padding="3,0,0,0"                                                                                  
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Foreground="{StaticResource WindowForeColor}"                                           
                                    FontSize="20"
                                    sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                    sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                                    sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                    sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                    sw:ShowSystemMenuBehavior.RightButtonShow="true"/>
                                <StackPanel Grid.Column="2" Orientation="Horizontal">

                                    <Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" >
                                        <Button.Content>
                                            <material:PackIcon Kind="WindowMinimize"  />
                                        </Button.Content>
                                    </Button>
                                    <Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}">
                                        <Button.Content>
                                            <material:PackIcon Kind="WindowMaximize"  />
                                        </Button.Content>
                                    </Button>
                                    <Button DockPanel.Dock="Right"  Style="{StaticResource WindowButton}" Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" >
                                        <Button.Content>
                                            <material:PackIcon Kind="WindowClose"  />
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter x:Name="WindowContent"/>
                                    </AdornerDecorator>
                                    <ResizeGrip  x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                        <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                    </Grid>
                </Border>
            </ControlTemplate>

            <Style x:Key="LinaqWindowStyleNoResize" TargetType="{x:Type Window}">
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="MinHeight" Value="46"/>
                <Setter Property="Background" Value="white"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderThickness" Value="7"/>
                <Setter Property="Foreground" Value="DarkGray"/>
                <Setter Property="Template" Value="{StaticResource WindowTemplateNoResize}"/>
            </Style>

            <Style x:Key="LinaqWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="MinHeight" Value="46"/>
                <Setter Property="Background" Value="white"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderThickness" Value="7"/>
                <Setter Property="Foreground" Value="DarkGray"/>
                <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
            </Style>
 

            <Style TargetType="{x:Type toolkit:MessageBox}">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="Caption" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="CaptionForeground" Value="{StaticResource WindowForeColor}" />
                <Setter Property="CaptionIcon" Value="/LinaqEditor;component/linaqicon256x256_Aqb_icon.ico" />
                <Setter Property="ButtonRegionBackground" Value="WhiteSmoke" />
                <Setter Property="WindowBorderBrush" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Setter Property="WindowBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="WindowOpacity" Value="0.7" />
                <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
                <Setter Property="CloseButtonStyle" Value="{StaticResource WindowButton}"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
